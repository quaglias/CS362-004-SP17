        -:    0:Source:randomtestcard3.c
        -:    0:Graph:randomtestcard3.gcno
        -:    0:Data:randomtestcard3.gcda
        -:    0:Runs:3
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include <stdlib.h>
        -:    4:#include <string.h>
        -:    5:#include <stdio.h>
        -:    6:#include <time.h>
        -:    7:#include "rngs.h"
        -:    8:#define MAX_TESTS 100
        -:    9:// Tests council room card
        3:   10:int main (int argc, char** argv) 
        -:   11:{
        3:   12:    printf (":::: COUNCIL ROOM RANDOM TESTER START ::::\n");
        -:   13:
        3:   14:    srand(time(NULL));
        -:   15:	
        -:   16:	int i;
        3:   17:    int j = 0;
        3:   18:    int bad = 0;
      303:   19:    for( i = 0; i < MAX_TESTS; i++){
      300:   20:        int numplayers = rand() % (MAX_PLAYERS - 1) + 2; // Value between 2 and 4.
      300:   21:        j += numplayers;
        -:   22:        struct gameState G;
      300:   23:        int k[10] = {adventurer, gardens, embargo, village, steward, mine, cutpurse, sea_hag, tribute, smithy};
        -:   24:
      300:   25:        initializeGame(numplayers, k, rand(), &G);
        -:   26:
      300:   27:        int player = rand() % numplayers;
      300:   28:        G.whoseTurn = player;
        -:   29:        
      300:   30:        int bonus = rand() % 50;
      300:   31:        int choice1 = rand() % 50;
      300:   32:        int choice2 = rand() % 50;
      300:   33:        int choice3 = rand() % 50;
      300:   34:        int handPos = rand() % MAX_HAND;
        -:   35:
        -:   36:        struct gameState orig;
      300:   37:        memcpy(&orig, &G, sizeof(struct gameState));
        -:   38:
      300:   39:        cardEffect(council_room, choice1, choice2, choice3, &G, handPos, &bonus);
        -:   40:
     1211:   41:        for(int i = 0; i < numplayers; i++){
      911:   42:            if(i == player){
      300:   43:                if(G.handCount[i] != orig.handCount[i] + 3){
    #####:   44:                    printf("TEST FAILED: Player %d didn't get 3 more cards.\n", i);
    #####:   45:                    bad++;
        -:   46:                }
        -:   47:            }else{
      611:   48:                if(G.handCount[i] != orig.handCount[i] + 1){
    #####:   49:                    printf("TEST FAILED: Player %d didn't draw 1 card.\n", i);
    #####:   50:                    bad++;
        -:   51:                }
        -:   52:            }
        -:   53:        }
        -:   54:    }
        -:   55:
        3:   56:    printf("%d of %d TESTS PASSED\n", j - bad, j);
        3:   57:	printf (":::: COUNCIL ROOM RANDOM TESTER END ::::\n");
        -:   58:}
